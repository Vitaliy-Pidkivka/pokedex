{"version":3,"sources":["utils/helpers.js","utils/api.js","hooks/usePokemonList.js","hooks/usePokemonDetails.js","constants/general.js","components/PokemonTypeButton.jsx","components/PokemonPreview.jsx","components/PokemonDetails.jsx","App.jsx","index.js"],"names":["createKey","base","args","reduce","result","item","axios","defaults","baseURL","fetchPokemon","data","url","get","usePokemonList","useState","pokemonList","setPokemonList","page","setPage","fetchPokemonList","a","params","offset","limit","results","useEffect","setNextPage","usePokemonDetails","pokemon","setPokemon","fetchPokemonDetails","blue","materialUiColors","brown","green","purple","red","grey","pink","blueGrey","yellow","amber","TYPES","COLORS","backgroundColor","hoverBackgroundColor","PokemonTypeButton","type","props","StyledButton","withStyles","palette","root","color","getContrastText","withTheme","Button","useStyles","makeStyles","flex","boxSizing","padding","pokemonInner","display","flexDirection","alignItems","boxShadow","picture","cursor","name","fontSize","fontWeight","textTransform","marginBottom","margin","PokemonPreview","filter","setFilter","classes","pokemonDetails","sprites","types","front_default","typesList","map","includes","setPokemonDetails","className","alt","onClick","src","index","variant","key","content","textAlign","height","pos","boldFont","infoWrapper","justifyContent","borderBottom","PokemonDetails","weight","base_experience","Card","CardContent","Typography","component","gutterBottom","stats","stat","base_stat","appWrapper","contentWrapper","flexWrap","overflowY","moreBtn","marginTop","background","App","collection","hasOwnProperty","length","Object","keys","isEmpty","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7183020f.chunk.js","sourcesContent":["/** can be used for generation of key props for elements rendered on loop */\nexport const createKey = (base = '', ...args) => (\n  args.reduce((result, item) => `${result}-${item}`, base)\n)\n\n/** can be used for instances of Array, Object and String */\nexport const isEmpty = (collection = []) => (\n  !(collection.hasOwnProperty('length')\n    ? collection.length\n    : Object.keys(collection).length)\n)","import axios from 'axios'\n\naxios.defaults.baseURL = 'https://pokeapi.co/api/v2/pokemon'\n\nexport const fetchPokemon = ({ data, url = '/' }) => axios.get(url, data)","import { useState, useEffect } from 'react'\n\nimport { fetchPokemon } from '../utils/api'\n\nconst LIMIT = 12\n\nconst usePokemonList = () => {\n  const [pokemonList, setPokemonList] = useState([])\n  const [page, setPage] = useState(0)\n\n  const setNextPage = () => setPage(page + 1)\n\n  const fetchPokemonList = async () => {\n    const params = {\n      offset: page * LIMIT,\n      limit: LIMIT,\n    }\n    const { data } = await fetchPokemon({ data: { params } })\n    setPokemonList([...pokemonList, ...data.results])\n  }\n\n  useEffect(() => {\n    fetchPokemonList()\n  }, [page])\n\n  return { pokemonList, setNextPage }\n}\n\nexport default usePokemonList","import { useState, useEffect } from 'react'\n\nimport { fetchPokemon } from '../utils/api'\n\nconst usePokemonDetails = (url) => {\n  const [pokemon, setPokemon] = useState({})\n\n  const fetchPokemonDetails = async () => {\n    const { data } = await fetchPokemon({ url })\n    setPokemon(data)\n  }\n  useEffect(() => {\n    fetchPokemonDetails()\n  }, [])\n\n  return pokemon\n}\n\nexport default usePokemonDetails","import * as materialUiColors from '@material-ui/core/colors';\n\nconst {blue, brown, green, purple, red,grey, pink, blueGrey, yellow,amber} = materialUiColors\n\nconst TYPES = {\n    bug: 'bug',\n    grass: 'grass',\n    fire: 'fire',\n    flying: 'flying',\n    poison: 'poison',\n    water: 'water',\n    normal: 'normal',\n    fighting: 'fighting',\n    ground: 'ground',\n    rock: 'rock',\n    ghost: 'ghost',\n    steel: 'steel',\n    electric: 'electric',\n    psychic: 'psychic',\n    ice: 'ice',\n    dragon: 'dragon',\n    dark: 'dark',\n    fairy: 'fairy',\n    shadow: 'shadow',\n    unknown: 'unknown',\n}\n\nexport const COLORS = {\n    [TYPES.bug]: {\n        backgroundColor: brown[500],\n        hoverBackgroundColor: brown[700]\n    },\n    [TYPES.grass]: {\n        backgroundColor: green[500],\n        hoverBackgroundColor: green[700]\n    },\n    [TYPES.fire]: {\n        backgroundColor: red[500],\n        hoverBackgroundColor: red[700]\n    },\n    [TYPES.flying]: {\n        backgroundColor: purple[300],\n        hoverBackgroundColor: purple[700]\n    },\n    [TYPES.poison]: {\n        backgroundColor: green[300],\n        hoverBackgroundColor: green[500]\n    },\n    [TYPES.water]: {\n        backgroundColor: blue[500],\n        hoverBackgroundColor: blue[700]\n    },\n    [TYPES.normal]: {\n        backgroundColor: blue[400],\n        hoverBackgroundColor: blue[600]\n    },\n    [TYPES.fighting]: {\n        backgroundColor: grey[200],\n        hoverBackgroundColor: grey[300]\n    },\n    [TYPES.ground]: {\n        backgroundColor: brown[300],\n        hoverBackgroundColor: brown[500]\n    },\n    [TYPES.rock]: {\n        backgroundColor: pink[300],\n        hoverBackgroundColor: pink[500]\n    },\n    [TYPES.ghost]: {\n        backgroundColor: grey[200],\n        hoverBackgroundColor: grey[400]\n    },\n    [TYPES.steel]: {\n        backgroundColor: grey[600],\n        hoverBackgroundColor: grey[700]\n    },\n    [TYPES.electric]: {\n        backgroundColor: blue[100],\n        hoverBackgroundColor: blue[300]\n    },\n    [TYPES.psychic]: {\n        backgroundColor: purple[100],\n        hoverBackgroundColor: purple[300]\n    },\n    [TYPES.ice]: {\n        backgroundColor: blue[600],\n        hoverBackgroundColor: purple[800]\n    },\n    [TYPES.dragon]: {\n        backgroundColor: red[700],\n        hoverBackgroundColor: red[800]\n    },\n    [TYPES.dark]: {\n        backgroundColor: blueGrey[700],\n        hoverBackgroundColor: blueGrey[800]\n    },\n    [TYPES.fairy]: {\n        backgroundColor: yellow[700],\n        hoverBackgroundColor: yellow[800]\n    },\n    [TYPES.shadow]: {\n        backgroundColor: blueGrey[300],\n        hoverBackgroundColor: blueGrey[400]\n    },\n    [TYPES.unknown]: {\n        backgroundColor: amber[300],\n        hoverBackgroundColor: amber[400]\n    },\n\n}","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles'\nimport { COLORS } from '../constants/general'\n\nconst PokemonTypeButton = ({ type, ...props }) => {\n    const { backgroundColor, hoverBackgroundColor } = COLORS[type] || {}\n    const withTheme = withStyles(({ palette }) => ({\n        root: {\n            backgroundColor,\n            color: palette.getContrastText(backgroundColor),\n            '&:hover': {\n              backgroundColor: hoverBackgroundColor,\n            },\n        },\n    }))\n    const StyledButton =  withTheme(Button)\n\n    return (\n       <StyledButton {...props} />\n    )\n}\n\nexport default PokemonTypeButton","import React from 'react'\nimport {createKey} from '../utils/helpers'\nimport usePokemonDetails from '../hooks/usePokemonDetails'\nimport {makeStyles} from '@material-ui/styles'\nimport PokemonTypeButton from \"./PokemonTypeButton\";\n\nconst useStyles = makeStyles( {\n    pokemon: {\n        flex: '1 1 33.333%',\n        boxSizing: 'border-box',\n        padding: 10,\n    },\n    pokemonInner: {\n        padding: 5,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        boxShadow: '0 0 10px gray'\n    },\n    picture: {\n        cursor: 'pointer',\n    },\n    name: {\n        fontSize: 16,\n        fontWeight: 900,\n        textTransform: 'capitalize',\n        cursor: 'pointer',\n        marginBottom: 10,\n    },\n    margin: {\n        margin: '0 5px 5px 0',\n    },\n});\n\nconst PokemonPreview = ({filter, name, setFilter, setPokemon}) => {\n\n    const classes = useStyles()\n    const pokemonDetails = usePokemonDetails(name)\n    const {sprites = {}, types = []} = pokemonDetails\n    const {front_default = ''} = sprites\n\n    const typesList = types.map(({type}) => type.name)\n    if (filter && !typesList.includes(filter)) return null\n\n    const setPokemonDetails = () => setPokemon(pokemonDetails)\n    return (\n        <div className={classes.pokemon}>\n            <div className={classes.pokemonInner}>\n                <img\n                    className={classes.picture}\n                    alt={name}\n                    onClick={setPokemonDetails}\n                    src={front_default}\n                />\n                <div onClick={setPokemonDetails}\n                     className={classes.name}\n                >\n                    {name}\n                </div>\n                <div>\n                    {typesList.map((type, index) => (\n                        <PokemonTypeButton\n                            className={classes.margin}\n                            variant='contained'\n                            key={createKey(type, index)}\n                            type={type}\n                            onClick={() => {\n                                const filterToSet = type === filter\n                                    ? ''\n                                    : type\n                                setFilter(filterToSet)\n                            }}\n                        >\n                            {type}\n                        </PokemonTypeButton>\n                        ))}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PokemonPreview","import React from 'react'\nimport CardContent from '@material-ui/core/CardContent'\nimport Card from '@material-ui/core/Card'\nimport Typography from '@material-ui/core/Typography'\nimport {makeStyles} from '@material-ui/styles'\n\nconst useStyles = makeStyles({\n    root: {\n        flex: '1 1 30%',\n        boxShadow: '0 0 10px gray',\n        margin: 10,\n    },\n    content: {\n        padding: 10\n    },\n    picture: {\n        textAlign: 'center',\n        height: '80px',\n    },\n    name: {\n        fontSize: 24,\n        fontWeight: 900,\n        textTransform: 'uppercase',\n        textAlign: 'center',\n    },\n    pos: {\n        marginBottom: 14,\n    },\n    boldFont: {\n        fontWeight: 'bold',\n        textTransform: 'capitalize',\n    } ,\n    infoWrapper: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        borderBottom: '1px solid gray',\n    },\n});\nconst PokemonDetails = ({pokemon}) => {\n    debugger\n\n    const classes = useStyles()\n    const {name, sprites = {}, types = [], weight, height,base_experience} = pokemon\n    const {front_default = ''} = sprites\n    return (\n            <Card className={classes.root} variant=\"outlined\">\n                <CardContent className={classes.content}>\n                    <Typography color='textSecondary'\n                                className={classes.picture}\n                                component='div'\n                                gutterBottom>\n                        <img alt={name} src={front_default}/>\n                    </Typography>\n                    <Typography variant='h5'\n                                component='h1'\n                                className={`${classes.name} ${classes.pos}`}\n                    >\n                        {name}\n                    </Typography>\n                    <Typography color='textSecondary'\n                                className={classes.infoWrapper}\n                    >\n                        <span className={classes.boldFont}>Weight: </span><span>{weight}</span>\n                    </Typography>\n                    <Typography color='textSecondary'\n                                className={classes.infoWrapper}\n                    >\n                        <span className={classes.boldFont}>Height: </span><span>{height}</span>\n                    </Typography>\n                    <Typography color='textSecondary'\n                                className={classes.infoWrapper}\n                    >\n                        <span className={classes.boldFont}>Base experience: </span><span>{base_experience}</span>\n                    </Typography>\n                    {pokemon.stats.map(stat => {\n                        return (\n                            <Typography color='textSecondary'\n                                        className={classes.infoWrapper}\n                            >\n                                <span className={classes.boldFont}>{stat.stat.name}: </span><span>{stat.base_stat}</span>\n                            </Typography>\n                        )\n                    })}\n                </CardContent>\n            </Card>\n    )\n}\n\nexport default PokemonDetails","import React, {useState} from 'react'\nimport Button from '@material-ui/core/Button'\nimport {createKey, isEmpty} from './utils/helpers'\nimport usePokemonList from './hooks/usePokemonList'\nimport PokemonPreview from './components/PokemonPreview'\nimport PokemonDetails from './components/PokemonDetails'\nimport {makeStyles} from '@material-ui/styles'\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n\nconst useStyles = makeStyles({\n    appWrapper: {\n        display: 'flex',\n    },\n    contentWrapper: {\n        display: 'flex',\n        flex: '0 1 50%',\n        flexWrap: 'wrap',\n\n    },\n    pokemonList: {\n        display: 'flex',\n        flex: '0 1 100%',\n        flexWrap: 'wrap',\n        boxSizing: 'border-box',\n        height: 'calc(100vh - 76px)',\n        overflowY: 'scroll',\n        justifyContent: 'center',\n    },\n    moreBtn: {\n        flex: '1 0 auto',\n        marginTop: 20,\n        padding: 16,\n        color: '#fff',\n        background: '#328df6',\n        margin: 10,\n    }\n});\n\nconst App = ({}) => {\n    const classes = useStyles();\n    const [pokemon, setPokemon] = useState({})\n    const [filter, setFilter] = useState('')\n    const {pokemonList, setNextPage} = usePokemonList()\n\n    return (\n        <div className={classes.appWrapper}>\n            <div className={classes.contentWrapper}>\n                <div  className={classes.pokemonList}>\n                    {pokemonList.map(({name}, index) => (\n                        <PokemonPreview\n                            key={createKey(name, index)}\n                            {...{filter, name, setFilter, setPokemon}}\n                        />\n                    ))}\n                </div>\n                <Button\n                    className={classes.moreBtn}\n                    color='primary'\n                    variant='contained'\n                    onClick={setNextPage}\n                >\n                    Load more\n                </Button>\n            </div>\n            {!isEmpty(pokemon) && (\n                <PokemonDetails\n                    pokemon={pokemon}/>\n            )}\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}